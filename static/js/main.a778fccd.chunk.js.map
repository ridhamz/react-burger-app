{"version":3,"sources":["components/burger/burgerIngredient/burgerIngredient.css","components/navigation/sideDrawer/SideDrawer.css","components/burger/buildControls/buildControl/buildControl.css","components/ui/input/input.css","components/navigation/toolBar/toolBar.css","components/navigation/navigationItems/NavigationItem/NavigationItem.css","components/burger/buildControls/buildControls.css","components/ui/button/button.css","hoc/layout/layout.css","assets/images/burger-logo.png","components/logo/logo.css","components/navigation/navigationItems/NavigationItems.css","components/navigation/sideDrawer/DrawerToggle/DrawerToggle.css","components/ui/backdrop/backdrop.css","components/burger/burger.css","components/ui/modal/modal.css","components/ui/spinner/spinner.css","components/order/checkoutSummary/checkoutSummary.css","containers/checkout/contactData/contactData.css","components/order/order.css","containers/auth/auth.css","hoc/aux.js","components/logo/logo.js","components/navigation/navigationItems/NavigationItem/NavigationItem.js","components/navigation/navigationItems/NavigationItems.js","components/navigation/sideDrawer/DrawerToggle/DrawerToggle.js","components/navigation/toolBar/toolBar.js","components/ui/backdrop/backdrop.js","components/navigation/sideDrawer/SideDrawer.js","hoc/layout/layout.js","axios-orders.js","store/actions/order.js","store/actions/actionTypes.js","store/actions/auth.js","components/burger/burgerIngredient/burgerIngredient.js","components/burger/burger.js","components/burger/buildControls/buildControl/buildControl.js","components/burger/buildControls/buildControls.js","components/ui/modal/modal.js","components/ui/button/button.js","components/burger/orderSummary/orderSummary.js","components/ui/spinner/spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/burgerBuilder.js","store/actions/burgerBuilder.js","components/order/checkoutSummary/checkoutSummary.js","shared/validation.js","components/ui/input/input.js","containers/checkout/contactData/contactData.js","containers/checkout/checkout.js","components/order/order.js","containers/orders/orders.js","containers/auth/auth.js","containers/auth/logout/logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","props","children","Logo","className","classes","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","Backdrop","show","SideDrawer","attachedClasses","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","style","marginTop","Component","connect","auth","token","instance","axios","create","baseURL","purchaseBurger","orderData","dispatch","post","then","response","id","type","puchaseBurgerSuccess","data","name","catch","error","message","logout","localStorage","removeItem","email","password","isSignUp","authData","returnSecureToken","url","res","console","log","setItem","idToken","userId","expirationDate","Date","getTime","expiresIn","localId","expTime","getItem","setTimeout","checkAuthTimeout","text","contents","err","eroor","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","modalClosed","Modal","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","totalPrice","purchaseCancelled","purchaseContinued","Spinner","Loader","withErrorHandler","WrappedComponent","useState","setError","useEffect","rq","interceptors","request","use","req","rs","eject","ings","burgerBuilder","onIngredientAdded","ingName","ingredientName","onIngredientRemoved","onInitIngredient","get","purchasing","setPurchasing","purchaseCancelHandler","disabledInfo","orderSummary","history","push","burger","sum","CheckoutSummay","checkoutSummary","width","margin","checkValidity","value","rules","isValid","required","trim","minLength","maxLength","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","onChange","changed","options","option","displayValue","Input","onOrderBurger","orderActions","setIngsData","withRouter","placeholder","validation","valid","street","zipCode","country","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","loading","setLoading","orderHandler","e","a","formElementIdentifier","preventDefault","formData","order","reslt","formElementsArray","config","form","onSubmit","formElement","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","inputChangedHandler","contactData","purchased","purchase","building","actions","summary","checkoutCancelled","goBack","checkoutContinued","replace","Order","ing","amount","IngredientOutput","ig","display","border","padding","orders","onFetchOrders","fetchedOrders","allOrders","ord","onAuth","isEmail","setFormData","setIsSignUp","errorMessage","onLogout","routes","path","component","Auth","BurgerBuild","Checkout","Orders","Logout","Boolean","window","location","hostname","match","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","newOrder","expDate","redicer","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,kBCA/UD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,4B,mBCA1ID,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,KAAO,4BAA4B,KAAO,8B,gBCApJD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,wBCApID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,YAAc,gC,kBCAlGD,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,OAAS,kC,kBCApFD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,YAAc,oCAAoC,OAAS,iC,gBCAnID,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,0B,6BCA/FD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,sB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,4C,gBCApCD,EAAOC,QAAU,CAAC,aAAe,sC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,8B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,0B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,wB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,MAAQ,0B,gBCA5DD,EAAOC,QAAU,CAAC,gBAAkB,4C,iBCApCD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,gBCA1ED,EAAOC,QAAU,CAAC,MAAQ,wB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,sOCCtC,WAACC,GAAD,OAAW,kBAAC,WAAD,KACrBA,EAAMC,W,oECUIC,EARF,SAACF,GACV,OACI,yBAAKG,UAAWC,IAAQF,MACpB,yBAAKG,IAAKC,IAAYC,IAAI,W,kCCQvBC,EAXQ,SAACR,GAAD,OACnB,wBAAIG,UAAWC,IAAQK,gBACnB,kBAAC,IAAD,CACIC,GAAIV,EAAMW,KACVC,OAAK,EACLC,gBAAiBT,IAAQU,QACvBd,EAAMC,YCMLc,EAZS,SAACf,GAAD,OACpB,wBAAIG,UAAWC,IAAQY,iBACnB,kBAAC,EAAD,CAAgBL,KAAK,KAArB,kBACCX,EAAMiB,iBAAmB,kBAAC,EAAD,CAAgBN,KAAK,WAArB,aAErBX,EAAMiB,gBAED,kBAAC,EAAD,CAAgBN,KAAK,WAArB,UADA,kBAAC,EAAD,CAAgBA,KAAK,SAArB,kB,iBCCHO,EARM,SAAClB,GAAD,OACjB,yBAAKG,UAAWC,IAAQe,aAAcC,QAASpB,EAAMqB,SACjD,8BACA,8BACA,gCCWOC,EAZC,SAAEtB,GAAF,OACZ,4BAAQG,UAAWC,IAAQmB,SACvB,kBAAC,EAAD,CAAcF,QAASrB,EAAMwB,sBAC7B,yBAAKrB,UAAWC,IAAQF,MACpB,kBAAC,EAAD,OAEJ,yBAAKC,UAAWC,IAAQqB,aACpB,kBAAC,EAAD,CAAiBR,gBAAiBjB,EAAM0B,Y,kCCNrCC,EAJE,SAAC3B,GAAD,OACbA,EAAM4B,KAAO,yBAAKzB,UAAWC,IAAQuB,SAAUP,QAASpB,EAAMqB,UAAkB,MCuBrEQ,EApBI,SAAE7B,GACjB,IAAI8B,EAAkB,CAAC1B,IAAQyB,WAAYzB,IAAQ2B,OAInD,OAHI/B,EAAMgC,OACNF,EAAkB,CAAC1B,IAAQyB,WAAYzB,IAAQ6B,OAG/C,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUL,KAAM5B,EAAMgC,KAAMX,QAASrB,EAAMkC,SAC3C,yBAAK/B,UAAW2B,EAAgBK,KAAK,MACjC,yBAAKhC,UAAWC,IAAQF,MACpB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,CAAiBe,gBAAiBjB,EAAM0B,aCZtDU,E,4MACFC,MAAQ,CACJC,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKC,SAAS,CAAEF,gBAAgB,K,EAGpCG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAAEJ,gBAAiBI,EAAUJ,oB,uDAIxC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASd,oBAAqBmB,KAAKF,wBAC/Bf,OAAQiB,KAAK3C,MAAMiB,kBACvB,kBAAC,EAAD,CACIS,OAAQiB,KAAK3C,MAAMiB,gBACnBe,KAAMW,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,0BACjB,0BAAMpC,UAAWC,IAAQwC,QAASC,MAAO,CAAEC,UAAW,SACjDH,KAAK3C,MAAMC,e,GAxBX8C,aAsCNC,eAPS,SAAAX,GACpB,MAAO,CACHpB,gBAAiBoB,EAAMY,KAAKC,SAKrBF,CAAyBZ,G,+BCxCzBe,EALEC,IAAMC,OAAO,CAC1BC,QAAS,kDCsBAC,EAAiB,SAACC,EAAWN,GAEtC,OAAO,SAAAO,GACH,OAAOL,EAAMM,KAAK,oBAAsBR,EAAOM,GAC1CG,MAAK,SAAAC,GAAQ,OAAIH,EAzBM,SAACI,EAAIL,GACrC,MAAO,CACHM,KCA+B,0BDC/BD,GAAIA,EACJL,UAAWA,GAqBoBO,CAAqBH,EAASI,KAAKC,KAAMT,OACnEU,OAAM,SAAAC,GAAK,OAAIV,EAjBjB,CACHK,KCP4B,uBDQ5BK,MAe+CA,EAAMC,eELhDC,EAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHT,KDZmB,WC0Bdb,EAAO,SAACuB,EAAOC,EAAUC,GAClC,OAAO,SAAAjB,GACHA,EAzCG,CACHK,KDSkB,eCgClB,IAAMa,EAAW,CACbH,QACAC,WACAG,mBAAmB,GAEnBC,EAAM,oHACNH,IACAG,EAAM,yGAEVzB,IAAMM,KAAKmB,EAAKF,GACXhB,MAAK,SAAAmB,GACFC,QAAQC,IAAIF,GACZR,aAAaW,QAAQ,QAASH,EAAId,KAAKkB,SACvC,IAlDYhC,EAAOiC,EAkDbC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAiC,IAArBR,EAAId,KAAKuB,WAKhE,OAJAjB,aAAaW,QAAQ,iBAAkBG,GACvCd,aAAaW,QAAQ,SAAUH,EAAId,KAAKwB,SACxC/B,GArDYP,EAqDS4B,EAAId,KAAKkB,QArDXC,EAqDoBL,EAAId,KAAKwB,QApDrD,CACH1B,KDIoB,cCHpBoB,QAAShC,EACTiC,OAAQA,KAkDA1B,EA9BS,WACrB,IAAMgC,EAAU,IAAIJ,KAAKf,aAAaoB,QAAQ,oBAAqB,IAAIL,MAAOC,UAC9E,OAAIG,EAAU,EAAU,SAAAhC,GAAQ,OAAIA,EAASY,MACtC,SAAAZ,GACHkC,YAAW,WACPlC,EAASY,OACVoB,IAwBcG,IACFd,EAAIe,UAEdlC,MAAK,SAAAmC,GAAQ,OAAIf,QAAQC,IAAIc,MAC7B5B,OAAM,SAAA6B,GACHhB,QAAQC,IAAIe,EAAI3B,SAChBX,EAnDL,CACHK,KDHiB,YCIjBkC,MAiD0BD,S,8CCzBnBE,G,uKAtCP,IAAIC,EAAa,KAEjB,OAASvD,KAAK3C,MAAM8D,MAChB,IAAO,eACHoC,EAAa,yBAAK/F,UAAWC,KAAQ+F,cACrC,MACJ,IAAO,YACHD,EACI,yBAAK/F,UAAWC,KAAQgG,UACpB,yBAAKjG,UAAWC,KAAQiG,SACxB,yBAAKlG,UAAWC,KAAQkG,UAGhC,MACJ,IAAO,OACHJ,EAAa,yBAAK/F,UAAWC,KAAQmG,OACrC,MACJ,IAAO,SACHL,EAAa,yBAAK/F,UAAWC,KAAQoG,SACrC,MACJ,IAAO,QACHN,EAAa,yBAAK/F,UAAWC,KAAQqG,QACrC,MACJ,IAAO,QACHP,EAAa,yBAAK/F,UAAWC,KAAQsG,QACrC,MACJ,QACIR,EAAa,KAGrB,OAAOA,M,GAhCgBnD,aCsBhB4D,GAtBA,SAAC3G,GACZ,IAAI4G,EAAyBC,OAAOC,KAAK9G,EAAM+G,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMlH,EAAM+G,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,GAAD,CAAkBC,IAAKJ,EAAQG,EAAGtD,KAAMmD,UAGtDK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAIP,OAHsC,IAAlCZ,EAAuBc,SACvBd,EAAyB,gEAGzB,yBAAKzG,UAAWC,KAAQuG,QACpB,kBAAC,GAAD,CAAkB7C,KAAK,cACtB8C,EACD,kBAAC,GAAD,CAAkB9C,KAAK,mB,wCCHpB6D,GAfM,SAAC3H,GAClB,OACI,yBAAKG,UAAWC,KAAQuH,cACpB,yBAAKxH,UAAWC,KAAQwH,OAAQ5H,EAAM6H,OACtC,4BACI1H,UAAWC,KAAQ0H,KACnB1G,QAASpB,EAAM+H,QACfC,SAAUhI,EAAMgI,UAHpB,QAIA,4BACI7H,UAAWC,KAAQ6H,KACnB7G,QAASpB,EAAMkI,OAFnB,UCPNC,GAAW,CACb,CAAEN,MAAO,QAAS/D,KAAM,SACxB,CAAE+D,MAAO,QAAS/D,KAAM,SACxB,CAAE+D,MAAO,SAAU/D,KAAM,UACzB,CAAE+D,MAAO,OAAQ/D,KAAM,SAuBZsE,GApBO,SAACpI,GACnB,OACI,yBAAKG,UAAWC,KAAQgI,eACpB,6CAAkB,gCAASpI,EAAMqI,MAAMC,QAAQ,KAC9CH,GAASnB,KAAI,SAAAuB,GAAI,OACd,kBAAC,GAAD,CACIlB,IAAKkB,EAAKV,MACVA,MAAOU,EAAKV,MACZK,MAAO,kBAAMlI,EAAMwI,gBAAgBD,EAAKzE,OACxCiE,QAAS,kBAAM/H,EAAMyI,kBAAkBF,EAAKzE,OAC5CkE,SAAUhI,EAAMgI,SAASO,EAAKzE,WAEtC,4BACI3D,UAAWC,KAAQsI,YACnBV,UAAWhI,EAAM2I,YACjBvH,QAASpB,EAAM4I,SAAU5I,EAAM0B,OAAS,YAAc,qB,oBCPvDmH,GAdD,SAAE7I,GAAF,OACV,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU4B,KAAM5B,EAAM4B,KAAMP,QAASrB,EAAM8I,cAC3C,yBACI3I,UAAWC,KAAQ2I,MACnBlG,MAAO,CACHmG,UAAWhJ,EAAM4B,KAAO,gBAAkB,qBAC1CqH,QAASjJ,EAAM4B,KAAO,IAAM,MAE/B5B,EAAMC,Y,oBCJJiJ,GAPA,SAAClJ,GAAD,OACX,4BACIG,UAAW,CAACC,KAAQ8I,OAAQ9I,KAAQJ,EAAMmJ,UAAUhH,KAAK,KACzD6F,SAAUhI,EAAMgI,SAChB5G,QAASpB,EAAMqB,SAAUrB,EAAMC,WCqBxBmJ,GAxBM,SAAEpJ,GACnB,IAAMqJ,EAAoBxC,OAAOC,KAAM9G,EAAM+G,aACxCC,KAAK,SAAAC,GACF,OACI,wBAAII,IAAKJ,GACL,0BAAMpE,MAAO,CAAEyG,cAAe,eAAiBrC,GADnD,KACmEjH,EAAM+G,YAAYE,OAIjG,OACI,kBAAC,EAAD,KACI,0CACA,iFACA,4BACKoC,GAEL,2BAAG,iDAAuBrJ,EAAMuJ,WAAWjB,QAAQ,KACnD,oDACA,kBAAC,GAAD,CAAQa,QAAQ,SAAS9H,QAASrB,EAAMwJ,mBAAxC,UACA,kBAAC,GAAD,CAAQL,QAAQ,UAAU9H,QAASrB,EAAMyJ,mBAAzC,c,oBCfGC,GANC,WACZ,OACI,yBAAKvJ,UAAWC,KAAQuJ,QAAxB,eC8BOC,GA/BU,SAACC,EAAkBzG,GACxC,OAAO,SAACpD,GAAW,IAAD,EACY8J,mBAAS,MADrB,mBACP3F,EADO,KACA4F,EADA,KAEdC,qBAAU,WACN,IAAMC,EAAK7G,EAAM8G,aAAaC,QAAQC,KAAI,SAAAC,GAEtC,OADAN,EAAS,MACFM,KAGLC,EAAKlH,EAAM8G,aAAatG,SAASwG,KAAI,SAAAtF,GAAG,OAAIA,KAAK,SAAAiB,GACnDgE,EAAShE,MAGb,OAAO,WACH3C,EAAM8G,aAAaC,QAAQI,MAAMN,GACjC7G,EAAM8G,aAAatG,SAAS2G,MAAMD,MAEvC,IAGH,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAO1I,KAAMuC,EAAO9C,QAHE,kBAAM0I,EAAS,QAIhC5F,GAEL,kBAAC0F,EAAqB7J,MCqFvBgD,gBAlBS,SAAAX,GACpB,MAAO,CACHmI,KAAMnI,EAAMoI,cAAc1D,YAC1BwC,WAAYlH,EAAMoI,cAAclB,WAChCpF,MAAO9B,EAAMoI,cAActG,MAC3BlD,gBAAsC,OAArBoB,EAAMY,KAAKC,UAIT,SAAAO,GACvB,MAAO,CACHiH,kBAAmB,SAACC,GAAD,OAAalH,ECvG7B,CACHK,KZLsB,iBYMtB8G,eDqG+DD,KAC/DE,oBAAqB,SAACF,GAAD,OAAalH,ECjG/B,CACHK,KZXyB,oBYYzB8G,eD+FoED,KACpEG,iBAAkB,kBAAMrH,GC9ErB,SAAAA,GACHL,EAAM2H,IAAI,qBACLpH,MAAK,SAAAmB,GAAG,OAAIrB,EAfd,CACHK,KZjBuB,kBYkBvBiD,YAayCjC,EAAId,UACxCE,OAAM,SAAA6B,GAAG,OAAItC,EATf,CACHK,KZvB+B,sCW+GxBd,CAA6C4G,IAjGxC,SAAC5J,GAAW,IAAD,EAGS8J,oBAAS,GAHlB,mBAGpBkB,EAHoB,KAGRC,EAHQ,KAK3BjB,qBAAU,cAEP,IAEH,IAqBMkB,EAAwB,WAC1BD,GAAc,IAUZE,EAAY,eACXnL,EAAMwK,MAEb,IAAK,IAAInD,KAAO8D,EACZA,EAAa9D,GAAO8D,EAAa9D,IAAQ,EAG7C,IAvC6BN,EAuCzBqE,EAAe,kBAAC,GAAD,CACfrE,YAAa/G,EAAMwK,KACnBjB,WAAYvJ,EAAMuJ,WAClBC,kBAAmB0B,EACnBzB,kBAjB4B,WAE5BzJ,EAAMqL,QAAQC,KAAK,gBAkBnBC,EAAS,kBAAC,WAAD,KACT,kBAAC,GAAD,CAAQxE,YAAa/G,EAAMwK,OAC3B,kBAAC,GAAD,CACIhC,gBAAiBxI,EAAM0K,kBACvBjC,kBAAmBzI,EAAM6K,oBACzB7C,SAAUmD,EACVxC,aApDqB5B,EAoDY/G,EAAMwK,KAnD/B3D,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GACD,OAAOF,EAAYE,MAEtBK,QAAO,SAACkE,EAAKhE,GACV,OAAOgE,EAAMhE,IACd,GAEM,GA4CToB,QAxCgB,WAChB5I,EAAMiB,gBACNgK,GAAc,GAEdjL,EAAMqL,QAAQC,KAAK,UAqCnBjD,MAAOrI,EAAMuJ,WACb7H,OAAQ1B,EAAMiB,mBAKtB,OAFIjB,EAAMmE,QAAOoH,EAAS,kBAAC,GAAD,OAGtB,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAO3J,KAAMoJ,EAAYlC,YAAaoC,GACjCE,GAEJG,KAuB6EnI,I,oBE3F3EqI,GAnBQ,SAACzL,GACpB,OACI,yBAAKG,UAAWC,KAAQsL,iBACpB,wDACA,yBAAK7I,MAAO,CAAE8I,MAAO,OAAQC,OAAQ,SACjC,kBAAC,GAAD,CAAQ7E,YAAa/G,EAAM+G,iB,6BCT7B8E,GAAgB,SAACC,EAAOC,GAC9B,IAAIC,GAAU,EAcd,OAZID,EAAME,WACND,EAA2B,KAAjBF,EAAMI,QAAiBF,GAGjCD,EAAMI,YACNH,EAAUF,EAAMpE,QAAUqE,EAAMI,WAAaH,GAG7CD,EAAMK,YACNJ,EAAUF,EAAMpE,QAAUqE,EAAMK,WAAaJ,GAG1CA,G,wCC2CAK,GAtDD,SAAErM,GACZ,IAAIsM,EAAe,KACbC,EAAe,CAACnM,KAAQkM,cAM9B,OAJItM,EAAMwM,SAAWxM,EAAMyM,gBAAkBzM,EAAM0M,SAC/CH,EAAajB,KAAKlL,KAAQoM,SAGrBxM,EAAM2M,aACX,IAAO,QACHL,EAAe,yCACXnM,UAAWoM,EAAapK,KAAK,MACzBnC,EAAM4M,cAFC,CAGXd,MAAO9L,EAAM8L,MACbe,SAAU7M,EAAM8M,WACpB,MACJ,IAAO,WACHR,EAAe,4CACXnM,UAAWoM,EAAapK,KAAK,MACzBnC,EAAM4M,cAFC,CAGXd,MAAO9L,EAAM8L,MACbe,SAAU7M,EAAM8M,WACpB,MACJ,IAAO,SACHR,EACI,4BACInM,UAAWoM,EAAapK,KAAK,KAC7B2J,MAAO9L,EAAM8L,MACbe,SAAU7M,EAAM8M,SACf9M,EAAM4M,cAAcG,QAAQ/F,KAAI,SAAAgG,GAAM,OACnC,4BAAQ3F,IAAK2F,EAAOlB,MAAOA,MAAOkB,EAAOlB,OACpCkB,EAAOC,kBAKxB,MACJ,QACIX,EAAe,yCACXnM,UAAWoM,EAAapK,KAAK,MACzBnC,EAAM4M,cAFC,CAGXd,MAAO9L,EAAM8L,MACbe,SAAU7M,EAAM8M,WAG5B,OACI,yBAAK3M,UAAWC,KAAQ8M,OACpB,2BAAO/M,UAAWC,KAAQyH,OAAQ7H,EAAM6H,OACvCyE,ICgJEtJ,gBAhBS,SAAAX,GACpB,MAAO,CACHmI,KAAMnI,EAAMoI,cAAc1D,YAC1BwC,WAAYlH,EAAMoI,cAAclB,WAEhCrG,MAAOb,EAAMY,KAAKC,UAIC,SAAAO,GACvB,MAAO,CACH0J,cAAe,SAAC3J,EAAWN,GAAZ,OAAsBO,EAAS2J,EAA4B5J,EAAWN,KACrFmK,YAAa,kBAAM5J,EJzJhB,CACHK,KZpCqB,sBgBgMdd,CAA6CsK,aAvLxC,SAACtN,GAAW,IAAD,EAIO8J,mBAAS,CACvC7F,KAAM,CACF0I,YAAa,QACbC,cAAe,CACX9I,KAAM,OACNyJ,YAAa,aAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,GAEdwB,OAAO,EACPf,SAAS,GAEbgB,OAAQ,CACJf,YAAa,QACbC,cAAe,CACX9I,KAAM,OACNyJ,YAAa,UAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,GAEdwB,OAAO,EACPf,SAAS,GAEbiB,QAAS,CACLhB,YAAa,QACbC,cAAe,CACX9I,KAAM,OACNyJ,YAAa,YAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,EACVE,UAAW,EACXC,UAAW,GAEfqB,OAAO,EACPf,SAAS,GAEbkB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACX9I,KAAM,OACNyJ,YAAa,WAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,GAEdwB,OAAO,EACPf,SAAS,GAEblI,MAAO,CACHmI,YAAa,QACbC,cAAe,CACX9I,KAAM,QACNyJ,YAAa,eAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,GAEdwB,OAAO,EACPf,SAAS,GAEbmB,eAAgB,CACZlB,YAAa,SACbC,cAAe,CACXG,QAAS,CACL,CAAEjB,MAAO,UAAWmB,aAAc,WAClC,CAAEnB,MAAO,WAAYmB,aAAc,cAG3CnB,MAAO,UACP0B,WAAY,GACZC,OAAO,KAlFY,mBAIpBK,EAJoB,KAITC,EAJS,OAsFWjE,oBAAS,GAtFpB,mBAsFpBkE,EAtFoB,KAsFPC,EAtFO,OAuFGnE,oBAAS,GAvFZ,mBAuFpBoE,EAvFoB,KAuFXC,EAvFW,KAyFrBC,EAAY,yCAAG,WAAOC,GAAP,oBAAAC,EAAA,sDAIjB,IAASC,KAHTF,EAAEG,iBACFL,GAAW,GACLM,EAAW,GACiBX,EAC9BW,EAASF,GAAyBT,EAAUS,GAAuBzC,MAEjE4C,EAAQ,CACV3H,YAAa/G,EAAMwK,KACnBnC,MAAOrI,EAAMuJ,WACb/F,UAAWiL,EACXtJ,OAAQb,aAAaoB,QAAQ,WAEjC1F,EAAMmN,cAAcuB,EAAO1O,EAAMkD,OAC5BS,MAAK,SAAAgL,GACFR,GAAW,GACXnO,EAAMqN,cACNrN,EAAMqL,QAAQC,KAAK,QAGtBpH,OAAM,SAAA6B,GAAG,OAAIoI,GAAW,MApBZ,2CAAH,sDA4CZS,EAAoB,GAC1B,IAAK,IAAIvH,KAAOyG,EACZc,EAAkBtD,KAAK,CACnBzH,GAAIwD,EACJwH,OAAQf,EAAUzG,KAG1B,IAAIyH,EACA,0BAAMC,SAAUX,GACXQ,EAAkB5H,KAAI,SAAAgI,GAAW,OAC9B,kBAAC,GAAD,CACI3H,IAAK2H,EAAYnL,GACjB8I,YAAaqC,EAAYH,OAAOlC,YAChCC,cAAeoC,EAAYH,OAAOjC,cAClCd,MAAOkD,EAAYH,OAAO/C,MAC1BU,SAAUwC,EAAYH,OAAOpB,MAC7BhB,eAAgBuC,EAAYH,OAAOrB,WACnCd,QAASsC,EAAYH,OAAOnC,QAC5BI,QAAS,SAACmC,GAAD,OArCG,SAACA,EAAOC,GAChC,IAAMC,EAAgB,eACfrB,GAEDsB,EAAkB,eACjBD,EAAiBD,IAExBE,EAAmBtD,MAAQmD,EAAMI,OAAOvD,MACxCqD,EAAiBD,GAAmBE,EACpCA,EAAmB3B,MAAQ5B,GAAcuD,EAAmBtD,MAAOsD,EAAmB5B,YACtF4B,EAAmB1C,SAAU,EAC7B,IAAIsB,GAAc,EAClB,IAAK,IAAIkB,KAAmBC,EACxBnB,EAAcmB,EAAiBD,GAAiBzB,OAASO,EAE7DD,EAAaoB,GACblB,EAAeD,GAqBiBsB,CAAoBL,EAAOD,EAAYnL,UAEnE,kBAAC,GAAD,CAAQsF,QAAQ,UAAUnB,UAAWgG,GAArC,UAMR,OAFIE,IAASY,EAAO,kBAAC,GAAD,OAGhB,yBAAK3O,UAAWC,KAAQmP,aACpB,uDACCT,OClHE9L,gBAlBS,SAAAX,GACpB,MAAO,CACHmI,KAAMnI,EAAMoI,cAAc1D,YAC1BwC,WAAYlH,EAAMoI,cAAclB,WAChC2E,QAAS7L,EAAMqM,MAAMR,QACrBsB,UAAWnN,EAAMqM,MAAMe,SACvBC,SAAUrN,EAAMoI,cAAciF,aAIX,SAAAjM,GACvB,MAAO,CACH0J,cAAe,SAAC3J,GAAD,OAAeC,EAASkM,EAAuBnM,QAMvDR,EApDE,SAAChD,GAYd,IAAKA,EAAM0P,SAAU,OAAO,kBAAC,IAAD,CAAUhP,GAAG,MACzC,IAAIkP,EAAU,kBAAC,IAAD,CAAUlP,GAAG,MAkB3B,OAjBIV,EAAMwK,OAENoF,EACI,6BAEI,kBAAC,GAAD,CACI7I,YAAa/G,EAAMwK,KACnBqF,kBAhBU,WACtB7P,EAAMqL,QAAQyE,UAgBFC,kBAbU,WACtB/P,EAAMqL,QAAQ2E,QAAQ,4BAcd,kBAAC,GAAD,CACIjJ,YAAa/G,EAAMwK,KACnBjB,WAAYvJ,EAAMuJ,eAK3BqG,K,oBCPIK,GA9BD,SAACjQ,GAEX,IAAM+G,EAAc,GACpB,IAAK,IAAImJ,KAAOlQ,EAAM+G,YAClBA,EAAYuE,KAAK,CACbrH,KAAMiM,EACNC,OAAQnQ,EAAM+G,YAAYmJ,KAIlC,IAAME,EAAmBrJ,EAAYC,KAAI,SAAAqJ,GACrC,OAAO,0BACHxN,MAAO,CACHyG,cAAe,aACfgH,QAAS,eACT1E,OAAQ,QACR2E,OAAQ,iBACRC,QAAS,OAEbnJ,IAAKgJ,EAAGpM,MAAOoM,EAAGpM,KARf,KAQuBoM,EAAGF,OAR1B,SAWX,OACI,yBAAKhQ,UAAWC,KAAQsO,OACpB,4CAAkB0B,GAClB,sCAAW,uCAAapQ,EAAMqI,MAAMC,QAAQ,OCgBzCtF,gBAfS,SAAAX,GACpB,MAAO,CACHoO,OAAQpO,EAAMqM,MAAM+B,OACpBvC,QAAS7L,EAAMqM,MAAMR,QACrBhL,MAAOb,EAAMY,KAAKC,MAClBiC,OAAQ9C,EAAMY,KAAKkC,WAIA,SAAA1B,GACvB,MAAO,CACHiN,cAAe,SAACxN,EAAOiC,GAAR,OAAmB1B,EpBqBf,SAACP,EAAOiC,GAC/B,OAAO,SAAC1B,GACJA,EAPG,CACHK,KC9C0B,uBDqD1BV,EAAM2H,IAAI,qBAAuB7H,EAAQ,8BAAgCiC,EAAO,KAC3ExB,MAAK,SAAAmB,GACF,IAAM6L,EAAgB,GACtB,IAAK,IAAItJ,KAAOvC,EAAId,KAEhB2M,EAAcrF,KAAd,2BACOxG,EAAId,KAAKqD,IADhB,IAEIxD,GAAIwD,KAIZ5D,EAjCL,CACHK,KC/B4B,uBDgC5B2M,OA+BoCE,OAE/BzM,OAAM,SAAA6B,GACHtC,EA7BL,CACHK,KCrCyB,oBDsCzBK,MA2BiC4B,QoBtCU4J,CAAoBzM,EAAOiC,QAI/DnC,EArCA,SAAChD,GAEZgK,qBAAU,WACNhK,EAAM0Q,cAAc1Q,EAAMkD,MAAOlD,EAAMmF,UACxC,IAEH,IAAIyL,EAAY,kBAAC,GAAD,MAShB,OARK5Q,EAAMkO,UACP0C,EAAY5Q,EAAMyQ,OAAOzJ,KAAI,SAAA6J,GAAG,OAAI,kBAAC,GAAD,CAChCxJ,IAAKwJ,EAAIxJ,IACTN,YAAa8J,EAAI9J,YACjBsB,OAAQwI,EAAIxI,YAKhB,6BACKuI,M,oBC0HE5N,gBAfS,SAAAX,GACpB,MAAO,CACH6L,QAAS7L,EAAMY,KAAKiL,QACpB/J,MAAO9B,EAAMY,KAAKkB,MAClBlD,gBAAsC,OAArBoB,EAAMY,KAAKC,MAC5BwM,SAAUrN,EAAMoI,cAAciF,aAIX,SAAAjM,GACvB,MAAO,CACHqN,OAAQ,SAACtM,EAAOC,EAAUC,GAAlB,OAA+BjB,EAASkM,EAAanL,EAAOC,EAAUC,QAIvE1B,EAvIF,SAAChD,GAAW,IAAD,EACkB8J,oBAAS,GAD3B,mBACAmE,GADA,aAEYnE,mBAAS,CACrCtF,MAAO,CACHmI,YAAa,QACbC,cAAe,CACX9I,KAAM,QACNyJ,YAAa,cAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,EACV8E,SAAS,GAEbtD,OAAO,EACPf,SAAS,GAEbjI,SAAU,CACNkI,YAAa,QACbC,cAAe,CACX9I,KAAM,WACNyJ,YAAa,iBAEjBzB,MAAO,GACP0B,WAAY,CACRvB,UAAU,EACVE,UAAW,GAEfsB,OAAO,EACPf,SAAS,KA7BG,mBAEb+B,EAFa,KAEHuC,EAFG,OAiCYlH,oBAAS,GAjCrB,mBAiCbpF,EAjCa,KAiCHuM,EAjCG,KAkEdrC,EAAoB,GAC1B,IAAK,IAAIvH,KAAOoH,EACZG,EAAkBtD,KAAK,CACnBzH,GAAIwD,EACJwH,OAAQJ,EAASpH,KAIzB,IAAIyH,EAAOF,EAAkB5H,KAAI,SAAAgI,GAAW,OACxC,kBAAC,GAAD,CACI3H,IAAK2H,EAAYnL,GACjB8I,YAAaqC,EAAYH,OAAOlC,YAChCC,cAAeoC,EAAYH,OAAOjC,cAClCd,MAAOkD,EAAYH,OAAO/C,MAC1BU,SAAUwC,EAAYH,OAAOpB,MAC7BhB,eAAgBuC,EAAYH,OAAOrB,WACnCd,QAASsC,EAAYH,OAAOnC,QAC5BI,QAAS,SAACmC,GAAD,OA5CW,SAACA,EAAOC,GAChC,IAAMC,EAAgB,eACfV,GAEDW,EAAkB,eACjBD,EAAiBD,IAExBE,EAAmBtD,MAAQmD,EAAMI,OAAOvD,MACxCqD,EAAiBD,GAAmBE,EACpCA,EAAmB3B,MAAQ5B,GAAcuD,EAAmBtD,MAAOsD,EAAmB5B,YACtF4B,EAAmB1C,SAAU,EAC7B,IAAIsB,GAAc,EAClB,IAAK,IAAIkB,KAAmBC,EACxBnB,EAAcmB,EAAiBD,GAAiBzB,OAASO,EAE7DgD,EAAY7B,GACZlB,EAAeD,GA4BSsB,CAAoBL,EAAOD,EAAYnL,UAI/D7D,EAAMkO,UACNY,EAAO,kBAAC,GAAD,OAGX,IAAIoC,EAAe,KAQnB,OAPIlR,EAAMmE,QACN+M,EACI,2BACKlR,EAAMmE,MAAMC,UAIrBpE,EAAMiB,gBAAwBjB,EAAM0P,SACpC,kBAAC,IAAD,CAAUhP,GAAG,cACX,kBAAC,IAAD,CAAUA,GAAG,MAEf,yBAAKP,UAAWC,KAAQ6C,MACpB,4CACCiO,EACD,0BAAMnC,SA/CU,SAAAE,GACpBA,EAAMT,iBACNzJ,QAAQC,IAAIyJ,EAASjK,MAAMsH,OAC3B/G,QAAQC,IAAIyJ,EAAShK,SAASqH,OAC9B9L,EAAM8Q,OAAOrC,EAASjK,MAAMsH,MAAO2C,EAAShK,SAASqH,MAAOpH,KA4CnDoK,EACD,kBAAC,GAAD,CAAQ3F,QAAQ,WAAhB,WAEJ,kBAAC,GAAD,CACIA,QAAQ,SACR9H,QA7EkB,WAC1B4P,GAAavM,KA0ET,aAIeA,EAAW,SAAW,cC1GlC1B,eAAQ,MANI,SAAAS,GACvB,MAAO,CACH0N,SAAU,kBAAM1N,EAASkM,SAIlB3M,EAdA,SAAChD,GAKZ,OAHAgK,qBAAU,WACNhK,EAAMmR,aACP,IACI,kBAAC,IAAD,CAAUzQ,GAAG,SC4BxB,IAMe4M,eAAWtK,aANF,SAAAX,GACtB,MAAO,CACLpB,gBAAsC,OAArBoB,EAAMY,KAAKC,SAINF,EAlC1B,SAAahD,GACX,IAAIoR,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWC,KAC/B,kBAAC,IAAD,CAAO3Q,OAAK,EAACyQ,KAAK,IAAIC,UAAWE,KACjC,kBAAC,IAAD,CAAU9Q,GAAG,OAcjB,OAXIV,EAAMiB,kBACRmQ,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWG,KACnC,kBAAC,IAAD,CAAOJ,KAAK,UAAUC,UAAWI,KACjC,kBAAC,IAAD,CAAOL,KAAK,UAAUC,UAAWK,KACjC,kBAAC,IAAD,CAAON,KAAK,IAAIzQ,OAAK,EAAC0Q,UAAWE,KACjC,kBAAC,IAAD,CAAU9Q,GAAG,QAKjB,6BACE,kBAAC,EAAD,KACG0Q,QCpBWQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aChBAC,GAAe,CACjBlL,YAAa,CACTmL,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEV9I,WAAY,EACZpF,OAAO,EACPuL,UAAU,GAGR4C,GAAoB,CACtBJ,MAAO,GACPE,OAAQ,GACRC,KAAM,IACNF,MAAO,IAwDII,GArDC,WAAmC,IAAlClQ,EAAiC,uDAAzB4P,GAAcO,EAAW,uCAC9C,OAAQA,EAAO1O,MACX,IxBnBqB,gBwBoBjB,OAAO,2BACAzB,GADP,IAEI0E,YAAY,2BACL1E,EAAM0E,aADF,IAEPmL,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAEV9I,WAAY,EACZpF,OAAO,IAGf,IxBrCsB,iBwBsClB,OAAO,2BACA9B,GADP,IAEI0E,YAAY,2BACL1E,EAAM0E,aADF,mBAENyL,EAAO5H,eAAiBvI,EAAM0E,YAAYyL,EAAO5H,gBAAkB,IAExErB,WAAYlH,EAAMkH,WAAa+I,GAAkBE,EAAO5H,gBACxD8E,UAAU,IAGlB,IxB/CyB,oBwBgDrB,OAAO,2BACArN,GADP,IAEI0E,YAAY,2BACL1E,EAAM0E,aADF,mBAENyL,EAAO5H,eAAiBvI,EAAM0E,YAAYyL,EAAO5H,gBAAkB,IAExErB,WAAYlH,EAAMkH,WAAa+I,GAAkBE,EAAO5H,gBACxD8E,SAA+B,IAArBrN,EAAMkH,aAExB,IxBxDuB,kBwByDnB,OAAO,2BACAlH,GADP,IAEI0E,YAAayL,EAAOzL,cAE5B,IxB5D+B,0BwB6D3B,OAAO,2BACA1E,GADP,IAEI8B,OAAO,IAGf,QACI,OAAO9B,ICnEb4P,GAAe,CACjBxB,OAAQ,GACRvC,SAAS,EACTuB,UAAU,GAoDC8C,GAjDC,WAAmC,IAAlClQ,EAAiC,uDAAzB4P,GAAcO,EAAW,uCAC9C,OAAQA,EAAO1O,MACX,IzBL+B,0ByBM3B,IAAM2O,EAAQ,2BACPD,EAAOhP,WADA,IAEVK,GAAI2O,EAAO3O,KAEf,OAAO,2BACAxB,GADP,IAEI6L,SAAS,EACTuB,UAAU,EACVgB,OAAQpO,EAAMoO,OAAOhJ,OAAOgL,KAEpC,IzBf4B,uByBgBxB,OAAO,2BACApQ,GADP,IAEI6L,SAAS,IAEjB,IzBnB6B,wByBoBzB,OAAO,2BACA7L,GADP,IAEI6L,SAAS,IAEjB,IzBvBqB,gByBwBjB,OAAO,2BACA7L,GADP,IAEIoN,UAAU,IAElB,IzB1B0B,qByB2BtB,OAAO,2BACApN,GADP,IAEI6L,SAAS,IAEjB,IzB9B4B,uByB+BxB,OAAO,2BACA7L,GADP,IAEIoO,OAAQ+B,EAAO/B,OACfvC,SAAS,IAEjB,IzBnCyB,oByBoCrB,OAAO,2BACA7L,GADP,IAEI6L,SAAS,IAEjB,QACI,OAAO7L,ICpDb4P,GAAe,CACjB/O,MAAOoB,aAAaoB,QAAQ,SAC5BP,OAAQb,aAAaoB,QAAQ,UAC7BgN,QAAUpO,aAAaoB,QAAQ,kBAC/BvB,MAAO,KACP+J,QAAS,MAmCEyE,GAhCC,WAAmC,IAAlCtQ,EAAiC,uDAAzB4P,GAAcO,EAAW,uCAC9C,OAAQA,EAAO1O,MACX,I1BGkB,a0BFd,OAAO,2BACAzB,GADP,IAEI8B,MAAO,KACP+J,SAAS,IAEjB,I1BFoB,c0BGhB,OAAO,2BACA7L,GADP,IAEIa,MAAOsP,EAAOtN,QACdC,OAAQqN,EAAOrN,OACfhB,MAAO,KACP+J,SAAS,IAEjB,I1BTiB,Y0BUb,OAAO,2BACA7L,GADP,IAEI8B,MAAOqO,EAAOrO,MACd+J,SAAS,IAEjB,I1BdmB,S0Bef,OAAO,2BACA7L,GADP,IAEIa,MAAO,KACPiC,OAAQ,OAEhB,QAAS,OAAO9C,ICvBlBuQ,GAAcC,YAAgB,CAClCpI,cAAeqI,GACfpE,MAAOqE,GACP9P,KAAM+P,KAGFC,GAAQC,YAAYN,GAAaO,YACrCC,YAAgBC,OAIlBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,CAAeO,SAAS,qBACtB,kBAAC,GAAD,QAGJC,SAASC,eAAe,SJmGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlQ,MAAK,SAAAmQ,GACJA,EAAaC,gBAEd7P,OAAM,SAAAC,GACLY,QAAQZ,MAAMA,EAAMC,c","file":"static/js/main.a778fccd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burgerIngredient__BreadBottom__1pOwK\",\"BreadTop\":\"burgerIngredient__BreadTop__2OyIE\",\"Seeds1\":\"burgerIngredient__Seeds1__3Bwd9\",\"Seeds2\":\"burgerIngredient__Seeds2__6_H-Q\",\"Meat\":\"burgerIngredient__Meat__3fSzs\",\"Cheese\":\"burgerIngredient__Cheese__9L2pz\",\"Salad\":\"burgerIngredient__Salad__1DjxB\",\"Bacon\":\"burgerIngredient__Bacon__3yJLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__26-p6\",\"Open\":\"SideDrawer__Open___7oey\",\"Close\":\"SideDrawer__Close__2Md_w\",\"Logo\":\"SideDrawer__Logo__Dg49N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"buildControl__BuildControl__2dC1G\",\"Label\":\"buildControl__Label__31tj3\",\"Less\":\"buildControl__Less__1K68V\",\"More\":\"buildControl__More__gPS9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input__input__2igCQ\",\"label\":\"input__label__21hNT\",\"inputElement\":\"input__inputElement__1SPOY\",\"invalid\":\"input__invalid__2yItg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"toolBar__Toolbar__23B5e\",\"Logo\":\"toolBar__Logo__19KZG\",\"DesktopOnly\":\"toolBar__DesktopOnly__3LXXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3_RvW\",\"active\":\"NavigationItem__active__1Qf19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"buildControls__BuildControls__tAmvB\",\"OrderButton\":\"buildControls__OrderButton__2V6t-\",\"enable\":\"buildControls__enable__i8Zr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button__Button__2rT_3\",\"Success\":\"button__Success__1-9D5\",\"Danger\":\"button__Danger__2nONf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout__Content__M6AXa\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo__Logo__1Nwoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3OrLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__22TNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop__Backdrop__3IlF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger__Burger__2y4NF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal__Modal__3N2S9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner__Loader__10F0u\",\"load2\":\"spinner__load2__1qi1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkoutSummary\":\"checkoutSummary__checkoutSummary__36ity\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactData\":\"contactData__contactData__3f5Ht\",\"Input\":\"contactData__Input__cROcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order__order__3l2yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"auth__auth__1VfkW\",\"Input\":\"auth__Input__3x_t7\"};","import React, { Fragment } from 'react';\r\n\r\nexport default (props) => <Fragment>\r\n    {props.children}\r\n</Fragment>","import React from 'react';\r\n\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport classes from './logo.css';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt=\"Logo\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact\n            activeClassName={classes.active}\n            >{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n        {props.isAuthenticated && <NavigationItem link=\"/orders\">My Orders</NavigationItem>}\n        {\n            !props.isAuthenticated\n                ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n                : <NavigationItem link=\"/logout\">Logout</NavigationItem>\n        }\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './toolBar.css';\r\nimport Logo from '../../logo/logo';\r\nimport NavigationItems from '../navigationItems/NavigationItems';\r\nimport DrawerToggle from '../sideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './backdrop.css';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\n\nimport Logo from '../../logo/logo';\nimport NavigationItems from '../navigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../ui/backdrop/backdrop';\nimport Aux from '../../../hoc/aux';\n\nconst SideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../aux';\r\nimport classes from './layout.css';\r\nimport ToolBar from '../../components/navigation/toolBar/toolBar';\r\nimport SideDrawer from '../../components/navigation/sideDrawer/SideDrawer';\r\n\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <ToolBar drawerToggleClicked={this.sideDrawerToggleHandler}\r\n                    isAuth={this.props.isAuthenticated} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content} style={{ marginTop: '70px' }}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout);","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-my-burger-d75b5.firebaseio.com/\",\r\n\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const puchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        id: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const puchaseBurgerFail = (err) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    purchaseBurgerStart();\r\n    return dispatch => {\r\n        return axios.post('/orders.json?auth' + token, orderData)\r\n            .then(response => dispatch(puchaseBurgerSuccess(response.data.name, orderData)))\r\n            .catch(error => dispatch(puchaseBurgerFail(error.message)));\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token ,userId) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId+'\"')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    // if (res.data.userId === localStorage.getItem('userId')) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                // }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENT_FAILED = 'FETCH_INGREDIENT_FAILED';\r\nexport const SET_INGS_DATA = 'SET_INGS_DATA';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'LOGOUT';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        eroor: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nconst checkAuthTimeout = () => {\r\n    const expTime = new Date(localStorage.getItem('expirationDate')) - new Date().getTime();\r\n    if (expTime < 0) return dispatch => dispatch(logout())\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expTime)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAAevFgyC4jHvh2ztp2bDTt_WR8LJ6Pnic';\r\n        if (isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAAevFgyC4jHvh2ztp2bDTt_WR8LJ6Pnic'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(res => {\r\n                console.log(res);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId))\r\n                dispatch(checkAuthTimeout())\r\n                return res.text();\r\n            })\r\n            .then(contents => console.log(contents))\r\n            .catch(err => {\r\n                console.log(err.message);\r\n                dispatch(authFail(err));\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './burgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop} >\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './burger.css';\r\nimport BurgerIngredient from './burgerIngredient/burgerIngredient';\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\n\r\nimport classes from './buildControl.css';\r\n\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button\r\n                className={classes.Less}\r\n                onClick={props.removed}\r\n                disabled={props.disabled}>Less</button>\r\n            <button\r\n                className={classes.More}\r\n                onClick={props.added}>More</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuildControl;","import React from 'react';\r\n\r\nimport classes from './buildControls.css';\r\nimport BuildControl from './buildControl/buildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={() => props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabled[ctrl.type]} />\r\n            ))}\r\n            <button\r\n                className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'LOGING TO ORDER'}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuildControls;","import React from 'react';\r\n\r\nimport classes from './modal.css';\r\nimport Aux from '../../../hoc/aux';\r\nimport Backdrop from '../backdrop/backdrop';\r\n\r\nconst modal = ( props ) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport classes from './button.css';\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        disabled={props.disabled}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/aux';\r\nimport Button from '../../ui/button/button';\r\n\r\nconst OrderSummary = ( props ) => {\r\n    const ingredientSummary = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {props.ingredients[igKey]}\r\n                </li> );\r\n        } );\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price : {props.totalPrice.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className={classes.Loader}>loading...</div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/ui/modal/modal';\r\nimport Aux from '../aux';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return (props) => {\r\n        const [error, setError] = useState(null);\r\n        useEffect(() => {\r\n            const rq = axios.interceptors.request.use(req => {\r\n                setError(null);\r\n                return req;\r\n            })\r\n\r\n            const rs = axios.interceptors.response.use(res => res, err => {\r\n                setError(err);\r\n            })\r\n\r\n            return () => {\r\n                axios.interceptors.request.eject(rq);\r\n                axios.interceptors.response.eject(rs);\r\n            }\r\n        }, []);\r\n\r\n        const errorConfirmedHandler = () => setError(null);\r\n        return (\r\n            <Aux>\r\n                <Modal show={error} clicked={errorConfirmedHandler}>\r\n                    {error}\r\n                </Modal>\r\n                <WrappedComponent {...props} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport Aux from '../../hoc/aux';\r\nimport Burger from '../../components/burger/burger';\r\nimport BuildControls from '../../components/burger/buildControls/buildControls';\r\nimport Modal from '../../components/ui/modal/modal';\r\nimport OrderSummary from '../../components/burger/orderSummary/orderSummary';\r\nimport Spinner from '../../components/ui/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\n\r\n\r\n\r\nconst BurgerBuild = (props) => {\r\n\r\n\r\n    const [purchasing, setPurchasing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //props.onInitIngredient()\r\n    }, [])\r\n\r\n    const updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0)\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n\r\n    const purchaseHandler = () => {\r\n        if (props.isAuthenticated) {\r\n            setPurchasing(true);\r\n        } else {\r\n            props.history.push('/auth')\r\n        }\r\n    }\r\n\r\n    const purchaseCancelHandler = () => {\r\n        setPurchasing(false);\r\n    }\r\n\r\n\r\n    const purchaseContinueHandler = () => {\r\n        // props.onInitPurchase();\r\n        props.history.push('/checkout');\r\n    }\r\n\r\n\r\n    const disabledInfo = {\r\n        ...props.ings\r\n    };\r\n    for (let key in disabledInfo) {\r\n        disabledInfo[key] = disabledInfo[key] <= 0\r\n    };\r\n\r\n    let orderSummary = <OrderSummary\r\n        ingredients={props.ings}\r\n        totalPrice={props.totalPrice}\r\n        purchaseCancelled={purchaseCancelHandler}\r\n        purchaseContinued={purchaseContinueHandler} />\r\n\r\n\r\n    let burger = <Fragment>\r\n        <Burger ingredients={props.ings} />\r\n        <BuildControls\r\n            ingredientAdded={props.onIngredientAdded}\r\n            ingredientRemoved={props.onIngredientRemoved}\r\n            disabled={disabledInfo}\r\n            purchasable={updatePurchaseState(props.ings)}\r\n            ordered={purchaseHandler}\r\n            price={props.totalPrice}\r\n            isAuth={props.isAuthenticated} />\r\n    </Fragment>;\r\n\r\n    if (props.error) burger = <Spinner />;\r\n\r\n    return (\r\n        <Aux>\r\n            <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n        </Aux>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredient: () => dispatch(actions.initIngredient()),\r\n        // onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuild, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientFailed  = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENT_FAILED,\r\n    }\r\n}\r\n\r\nexport const initIngredient = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(res => dispatch(setIngredients(res.data)))\r\n            .catch(err => dispatch(fetchIngredientFailed()))\r\n    }\r\n}\r\n\r\nexport const  setIngsData = () => {\r\n    return {\r\n        type :actionTypes.SET_INGS_DATA\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../burger/burger';\r\nimport classes from './checkoutSummary.css';\r\n\r\nconst CheckoutSummay = (props) => {\r\n    return (\r\n        <div className={classes.checkoutSummary}>\r\n            <h1>We hope iy tatstes well!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n           { /*<Button\r\n                btnType='Danger'\r\n                clicked={props.checkoutCancelled}\r\n            >CANCEL</Button>\r\n            <Button\r\n                btnType='Success'\r\n                clicked={props.checkoutContinued}\r\n            >CONTINUE</Button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutSummay;","export  const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n","import React from 'react';\r\n\r\nimport classes from './input.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.inputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../../axios-orders';\r\nimport { checkValidity } from '../../../shared/validation'\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from '../../../components/ui/button/button';\r\nimport classes from './contactData.css';\r\nimport Spinner from '../../../components/ui/spinner/spinner';\r\nimport Input from '../../../components/ui/input/input';\r\nimport * as orderActions from '../../../store/actions/order';\r\nimport * as burgerActions from '../../../store/actions/burgerBuilder';\r\n\r\n\r\nconst ContactData = (props) => {\r\n\r\n\r\n\r\n    const [orderForm, setOrderForm] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Your Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Street'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        zipCode: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'ZIP Code'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 5\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Country'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your E-Mail'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        deliveryMethod: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    { value: 'fastest', displayValue: 'Fastest' },\r\n                    { value: 'cheapest', displayValue: 'Cheapest' }\r\n                ]\r\n            },\r\n            value: 'fastest',\r\n            validation: {},\r\n            valid: true\r\n        }\r\n    });\r\n\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const orderHandler = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = {};\r\n        for (let formElementIdentifier in orderForm) {\r\n            formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: props.ings,\r\n            price: props.totalPrice,\r\n            orderData: formData,\r\n            userId: localStorage.getItem('userId')\r\n        }\r\n        props.onOrderBurger(order, props.token)\r\n            .then(reslt => {\r\n                setLoading(false);\r\n                props.setIngsData();\r\n                props.history.push('/')\r\n            }\r\n            )\r\n            .catch(err => setLoading(false));\r\n\r\n\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        setOrderForm(updatedOrderForm);\r\n        setFormIsValid(formIsValid);\r\n    }\r\n\r\n    const formElementsArray = [];\r\n    for (let key in orderForm) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: orderForm[key]\r\n        });\r\n    }\r\n    let form = (\r\n        <form onSubmit={orderHandler}>\r\n            {formElementsArray.map(formElement => (\r\n                <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event) => inputChangedHandler(event, formElement.id)} />\r\n            ))}\r\n            <Button btnType=\"Success\" disabled={!formIsValid}>ORDER</Button>\r\n        </form>\r\n    );\r\n\r\n    if (loading) form = <Spinner />;\r\n\r\n    return (\r\n        <div className={classes.contactData}>\r\n            <h4>Enter Your Contact Data</h4>\r\n            {form}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        //loading: state.order.loading\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(orderActions.purchaseBurger(orderData, token)),\r\n        setIngsData: () => dispatch(burgerActions.setIngsData())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ContactData));","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\nimport CheckoutSummay from '../../components/order/checkoutSummary/checkoutSummary';\r\nimport ContactData from './contactData/contactData';\r\n\r\n\r\n\r\nconst Checkout = (props) => {\r\n\r\n\r\n\r\n\r\n    const checkoutCancelled = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const checkoutContinued = () => {\r\n        props.history.replace('/checkout/conact-data');\r\n    }\r\n    if (!props.building) return <Redirect to='/' />\r\n    let summary = <Redirect to=\"/\" />\r\n    if (props.ings) {\r\n        //  const purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null;\r\n        summary = (\r\n            <div>\r\n                {/*purchasedRedirect*/}\r\n                <CheckoutSummay\r\n                    ingredients={props.ings}\r\n                    checkoutCancelled={checkoutCancelled}\r\n                    checkoutContinued={checkoutContinued}\r\n                />\r\n                <ContactData\r\n                    ingredients={props.ings}\r\n                    totalPrice={props.totalPrice} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return summary;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        purchased: state.order.purchase,\r\n        building: state.burgerBuilder.building\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\r\nimport classes from './order.css';\r\n\r\nconst Order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for (let ing in props.ingredients) {\r\n        ingredients.push({\r\n            name: ing,\r\n            amount: props.ingredients[ing]\r\n        })\r\n    }\r\n\r\n    const IngredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount}) </span>;\r\n    })\r\n\r\n    return (\r\n        <div className={classes.order}>\r\n            <p>Ingredients : {IngredientOutput}</p>\r\n            <p>Price : <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Order;","import React, { useEffect, useState } from 'react';\r\nimport Order from '../../components/order/order';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/ui/spinner/spinner';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Orders = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.onFetchOrders(props.token, props.userId)\r\n    }, [])\r\n\r\n    let allOrders = <Spinner />\r\n    if (!props.loading) {\r\n        allOrders = props.orders.map(ord => <Order\r\n            key={ord.key}\r\n            ingredients={ord.ingredients}\r\n            price={+ord.price}\r\n        />);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {allOrders}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../components/ui/input/input';\r\nimport Button from '../../components/ui/button/button';\r\nimport classes from './auth.css';\r\nimport { connect } from 'react-redux';\r\nimport { checkValidity } from '../../shared/validation'\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/ui/spinner/spinner';\r\n\r\nconst Auth = (props) => {\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your Email'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Your Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n    });\r\n\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n    const switchAuthModeHandler = () => {\r\n        setIsSignUp(!isSignUp);\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...formData\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        setFormData(updatedOrderForm);\r\n        setFormIsValid(formIsValid);\r\n    }\r\n\r\n\r\n    const onSubmitHandler = event => {\r\n        event.preventDefault();\r\n        console.log(formData.email.value);\r\n        console.log(formData.password.value);\r\n        props.onAuth(formData.email.value, formData.password.value, isSignUp);\r\n    }\r\n\r\n    const formElementsArray = [];\r\n    for (let key in formData) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: formData[key]\r\n        });\r\n    }\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n        <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangedHandler(event, formElement.id)}\r\n        />\r\n\r\n    ))\r\n    if (props.loading) {\r\n        form = <Spinner />\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (props.error) {\r\n        errorMessage = (\r\n            <p>\r\n                {props.error.message}\r\n            </p>\r\n        )\r\n    }\r\n    if (props.isAuthenticated) return props.building ?\r\n        <Redirect to='/checkout' />\r\n        : <Redirect to='/' />\r\n    return (\r\n        <div className={classes.auth}>\r\n            <h1>AUTHENTICATE</h1>\r\n            {errorMessage}\r\n            <form onSubmit={onSubmitHandler}>\r\n                {form}\r\n                <Button btnType='Success'>SUBMIT</Button>\r\n            </form>\r\n            <Button\r\n                btnType='Danger'\r\n                clicked={switchAuthModeHandler}\r\n            >\r\n                SWITCH TO {isSignUp ? 'SIGNIN' : 'SIGNUP'}\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        building: state.burgerBuilder.building\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Logout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.onLogout()\r\n    }, [])\r\n    return <Redirect to='/' />;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\nimport { BrowserRouter, Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport Layout from './hoc/layout/layout';\nimport BurgerBuild from './containers/BurgerBuilder/burgerBuilder';\nimport Checkout from './containers/checkout/checkout';\nimport Orders from './containers/orders/orders';\nimport Auth from './containers/auth/auth';\nimport Logout from './containers/auth/logout/logout';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  let routes = (\n    <Switch>\n      <Route path='/auth' component={Auth} />\n      <Route exact path='/' component={BurgerBuild} />\n      <Redirect to='/' />\n    </Switch>\n  )\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path='/checkout' component={Checkout} />\n        <Route path='/orders' component={Orders} />\n        <Route path='/logout' component={Logout} />\n        <Route path='/' exact component={BurgerBuild} />\n        <Redirect to='/' />\n      </Switch>\n    )\n  }\n  return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n}\n\nconst mapSateToPtrops = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nexport default withRouter(connect(mapSateToPtrops)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 0,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_INGS_DATA:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    salad: 0,\r\n                    bacon: 0,\r\n                    cheese: 0,\r\n                    meat: 0\r\n                },\r\n                totalPrice: 0,\r\n                error: false\r\n            }\r\n\r\n        case (actionTypes.ADD_INGREDIENT):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n\r\n        case (actionTypes.REMOVE_INGREDIENT):\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: state.totalPrice === 0 ? false : true\r\n            }\r\n        case (actionTypes.SET_INGREDIENTS):\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients\r\n            }\r\n        case actionTypes.FETCH_INGREDIENT_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as ActionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchase: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.id\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchase: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case ActionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case ActionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ActionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchase: false\r\n            }\r\n        case ActionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ActionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case ActionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    userId: localStorage.getItem('userId'),\r\n    expDate : localStorage.getItem('expirationDate'),\r\n    error: null,\r\n    loading: null\r\n};\r\n\r\nconst redicer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default redicer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk)\n));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename='/react-burger-app'>\n      <App />\n    </BrowserRouter>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}